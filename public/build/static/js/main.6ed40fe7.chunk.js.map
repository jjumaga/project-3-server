{"version":3,"sources":["api/apiHandler.js","components/Auth/UserContext.jsx","components/Auth/UserProvider.jsx","components/Auth/withUser.jsx","components/NavMain.jsx","pages/Home.jsx","components/Forms/FormSignin.jsx","pages/Signin.jsx","components/Forms/FormSignup.jsx","pages/Signup.jsx","components/ProtectedRoute.jsx","components/DocumentDisplay.jsx","pages/Profile.jsx","tools.js","components/Forms/FormCreateDocument.jsx","pages/CreateDocument.jsx","components/Forms/FormUpdateDocument.jsx","pages/UpdateDocument.jsx","components/PatientDisplay.jsx","pages/PatientList.jsx","pages/MyPatients.jsx","App.jsx","index.js"],"names":["service","axios","create","baseURL","process","withCredentials","errorHandler","error","response","data","console","log","userInfo","post","then","res","catch","get","patientId","id","patch","documentId","delete","UserContext","React","createContext","UserProvider","state","user","isLoggedIn","isLoading","setUser","setState","removeUser","apiHandler","authValues","this","Provider","value","props","children","Component","withUser","ComponentToPassUserContextTo","Consumer","context","className","exact","to","Fragment","onClick","Home","icon","FormSignin","email","password","handleChange","event","key","target","name","handleSubmit","preventDefault","onChange","onSubmit","htmlFor","type","placeholder","contextType","withRouter","Signin","FormSignup","firstName","lastName","jobTitle","Signup","component","rest","render","dayjs","require","DocumentDisplay","selectedDocument","documents","patients","formRef","createRef","match","params","err","responseFromApi","filter","document","_id","ref","map","date","format","docType","uploadedBy","notes","href","handleDelete","Profile","handleDocumentUpdate","updatedDocument","handleClose","onDocumentUpdate","buildFormData","formData","parentKey","Date","File","append","Object","keys","forEach","FormCreateDocument","files","fd","FormData","httpResponse","patient","history","push","handleFileSelect","tmpUrl","file","image","defaultValue","spellCheck","CreateDocument","FormUpdateDocument","timeoutId","setTimeout","status","message","UpdateDocument","selectedPatient","includes","handleClick","birthDate","socialSecurityNumber","displayAddButton","PatientList","MyPatients","length","handlePatient","library","add","faEdit","faTrash","faFileUpload","faCoffee","faArrowCircleRight","faPlus","App","path","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.6ed40fe7.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst service = axios.create({\n  baseURL: process.env.REACT_APP_BACKEND_URL,\n  withCredentials: true, // Cookie is sent to client when using this service. (used for session)\n});\n\nfunction errorHandler(error) {\n  if (error.response.data) {\n    console.log(error.response && error.response.data);\n    throw error;\n  }\n  throw error;\n}\n\nexport default {\n  service,\n\n  signup(userInfo) {\n    return service\n      .post(\"/api/auth/signup\", userInfo)\n      .then((res) => res.data)\n      .catch(errorHandler);\n  },\n\n  signin(userInfo) {\n    return service\n      .post(\"/api/auth/signin\", userInfo)\n      .then((res) => res.data)\n      .catch(errorHandler);\n  },\n\n  isLoggedIn() {\n    return service\n      .get(\"/api/auth/isLoggedIn\")\n      .then((res) => res.data)\n      .catch(errorHandler);\n  },\n\n  logout() {\n    return service\n      .get(\"/api/auth/logout\")\n      .then((res) => res.data)\n      .catch(errorHandler);\n  },\n\n  createDocument(data) {\n    return service\n      .post(\"/api/documents\", data)\n      .then((res) => res.data)\n      .catch(errorHandler);\n  },\n\n  getDocuments() {\n    return service\n      .get(\"/api/documents\")\n      .then((res) => res.data)\n      .catch(errorHandler);\n  },\n\n  getPatientDocuments(patientId) {\n    return (\n      service\n        ///api/patient/${patientId}\n        .get(\"/api/patient/\" + patientId + \"/documents\")\n        .then((res) => res.data)\n        .catch(errorHandler)\n    );\n  },\n\n  getOneDocument(id) {\n    return service\n      .get(`/api/documents/${id}`)\n      .then((res) => res.data)\n      .catch(errorHandler);\n  },\n\n  updateDocument(id, data) {\n    return service\n      .patch(`api/documents/${id}`, data)\n      .then((res) => res.data)\n      .catch(errorHandler);\n  },\n\n  removeDocument(documentId) {\n    return service\n      .delete(`/api/documents/${documentId}`)\n      .then((res) => res.data)\n      .catch(errorHandler);\n  },\n\n  getPatients() {\n    return service\n      .get(\"/api/patient\")\n      .then((res) => res.data)\n      .catch(errorHandler);\n  },\n\n  addNewPatient(patientId) {\n    return service\n      .patch(\"/api/users/me/patient\", { id: patientId })\n      .catch(errorHandler);\n  },\n\n  getMyPatients() {\n    return service\n      .get(\"/api/users/me/patient\")\n      .then((res) => res.data)\n      .catch(errorHandler);\n  },\n\n  getPatientProfile(patientId) {\n    return service\n      .get(`/api/patient/${patientId}`)\n      .then((res) => res.data)\n      .catch(errorHandler);\n  },\n};\n","import React from \"react\";\n\nexport const UserContext = React.createContext();\n\nexport default UserContext;\n","import React, { Component } from \"react\";\nimport apiHandler from \"../../api/apiHandler\";\nimport { UserContext } from \"./UserContext\";\n\nclass UserProvider extends Component {\n  state = {\n    user: null,\n    isLoggedIn: false,\n    isLoading: true,\n  };\n\n  componentDidMount() {\n    apiHandler\n      .isLoggedIn()\n      .then((data) => {\n        this.setState({ user: data, isLoggedIn: true, isLoading: false });\n      })\n      .catch((error) => {\n        this.setState({ user: null, isLoggedIn: false, isLoading: false });\n      });\n  }\n\n  setUser = (user) => {\n    this.setState({ user, isLoggedIn: true });\n  };\n\n  removeUser = () => {\n    this.setState({ user: null, isLoggedIn: false });\n  };\n\n  render() {\n    //  Setup all the values/functions you want to expose to anybody reading\n    // from the AuthContext.\n    const authValues = {\n      user: this.state.user,\n      setUser: this.setUser,\n      removeUser: this.removeUser,\n      isLoggedIn: this.state.isLoggedIn,\n      isLoading: this.state.isLoading,\n    };\n\n    return (\n      <UserContext.Provider value={authValues}>\n        {this.props.children}\n      </UserContext.Provider>\n    );\n  }\n}\n\nexport default UserProvider;\n","import React from \"react\";\nimport { UserContext } from \"./UserContext\";\n\n// This is what we call a HOC (Higher Order Component).\n// It takes a component as a parameter and it returns a component.\n// This technique can be used to abstract some logic in order to pass\n// some data down as props to the component sent as parameter.\n\n// The use case of this one is to make it easy to access the user context to\n// any component in our app.\n\n/* ******************************************************** */\n\n//  How to use:  =>\n// YourComponent.jsx\n// import React from \"react\"\n// function or class YourComponent()\n//\n// ... your implementation.\n//\n// export default withUser(YourComponent)\n// ----------------^ your component now has access to the user context defined in UserProvider.jsx.\n\n// This component is not exported as default, so you have to import it\n// this way :\n// import { withUser } from \"../relative/path/to/this/file\"\n\nexport const withUser = (ComponentToPassUserContextTo) => {\n  return function (props) {\n    return (\n      <UserContext.Consumer>\n        {(context) => (\n          <ComponentToPassUserContextTo {...props} context={context} />\n        )}\n      </UserContext.Consumer>\n    );\n  };\n};\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { withUser } from \"../components/Auth/withUser\";\nimport apiHandler from \"../api/apiHandler\";\n//import background from \"../banner.jpg\";\n\nimport \"../styles/NavMain.css\";\n\nconst NavMain = (props) => {\n  const { context } = props;\n\n  function handleLogout() {\n    apiHandler\n      .logout()\n      .then(() => {\n        context.removeUser();\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  return (\n    <nav className=\"nav-bar\">\n      <div className=\"logo\">\n        <NavLink exact to=\"/\">\n          <h3 className=\"bottom-border\">HealthHub</h3>\n        </NavLink>\n      </div>\n\n      <ul className=\"nav-ul\">\n        {context.isLoggedIn && (\n          <React.Fragment>\n            <li className=\"hover-style\">\n              <NavLink to=\"/PatientList\">\n                <span className=\"noselect\">Find a Patient</span>\n              </NavLink>\n            </li>\n\n            <li className=\"hover-style\">\n              <NavLink to=\"/MyPatients\">\n                <span className=\"noselect\">My Patients</span>\n              </NavLink>\n            </li>\n\n            <li className=\"hover-style\">\n              <p className=\"noselect\" onClick={handleLogout}>\n                Logout\n              </p>\n            </li>\n          </React.Fragment>\n        )}\n        {!context.isLoggedIn && (\n          <React.Fragment>\n            <li className=\"hover-style\">\n              <NavLink to=\"/signin\">\n                <span className=\"noselect\">Log In</span>\n              </NavLink>\n            </li>\n\n            <li className=\"hover-style\">\n              <NavLink to=\"/signup\">\n                <span className=\"noselect\">Create Account</span>\n              </NavLink>\n            </li>\n          </React.Fragment>\n        )}\n      </ul>\n    </nav>\n  );\n};\n\nexport default withUser(NavMain);\n","import React, { Component } from \"react\";\nimport \"../styles/home.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { NavLink } from \"react-router-dom\";\n\n//const Home = (props) => {\n//  const { context } = props;\n\nexport class Home extends Component {\n  render() {\n    return (\n      <body className=\"home-page\">\n        <header>\n          <p className=\"header-desc\">\n            Allowing healthcare professionals to communicate patient information\n            <br />\n            seamlessly through an easy-to-use and industry tested platform.\n          </p>\n        </header>\n        <hr />\n        <div className=\"hub-description\">\n          Healthhub is a shared platform that allows healthcare professionals\n          from any healthcare institution to upload and share patient\n          information. From your account, you can find and follow your patients,\n          access all information that has been uploaded to their profile, and\n          add additional information.\n        </div>\n        <div className=\"home-body\">\n          <section className=\"home-intro\">\n            <h2 className=\"section-title\">Save Time</h2>\n            <p className=\"section-desc\">\n              Health Hub brings all health care organisations to one place\n              through its easy-to-use platform, so you can focus on what's most\n              important.\n            </p>\n          </section>\n          <section className=\"home-intro\">\n            <h2 className=\"section-title\">Don't Miss a Thing</h2>\n            <p className=\"section-desc\">\n              A new patient is transfering to hospice from home care? Every part\n              of your patients' history is linked to their profile, from\n              prescriptions to daily journals.\n            </p>\n          </section>\n          <section className=\"home-intro\">\n            <h2 className=\"section-title\">Peace of Mind</h2>\n            <p className=\"section-desc\">\n              Your patients and their family can relax knowing that you have all\n              the information you need to give the best care possible.\n            </p>\n          </section>\n        </div>\n        <div className=\"get-started-section\">\n          <p>Create your free account today</p>\n          <React.Fragment>\n            <NavLink to=\"/signup\">\n              <span className=\"submit-btn\">Create Account</span>\n            </NavLink>\n          </React.Fragment>\n        </div>\n        <footer className=\"home-footer\">\n          An Ironhack SPA project made with react, express, and{\" \"}\n          <FontAwesomeIcon icon=\"coffee\" /> by Jacqueline Jumaga\n        </footer>\n      </body>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from \"react\";\nimport { withRouter, Redirect } from \"react-router-dom\";\nimport { UserContext } from \"../Auth/UserContext\";\nimport apiHandler from \"../../api/apiHandler\";\nimport \"../../styles/form.css\";\n\nclass FormSignin extends Component {\n  static contextType = UserContext;\n\n  state = {\n    email: \"\",\n    password: \"\",\n  };\n\n  handleChange = (event) => {\n    const key = event.target.name;\n    const value = event.target.value;\n\n    this.setState({ [key]: value });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    apiHandler\n      .signin(this.state)\n      .then((data) => {\n        this.context.setUser(data);\n        //this.props.history.push(\"/\");\n      })\n      .catch((error) => {\n        console.log(error);\n        // Display error message here, if you set the state\n      });\n  };\n\n  render() {\n    if (this.context.user) {\n      return <Redirect to=\"/\" />;\n    }\n\n    return (\n      <div className=\"form\">\n        <h2 className=\"form-message\">Sign in</h2>\n\n        <form\n          className=\"account-form\"\n          onChange={this.handleChange}\n          onSubmit={this.handleSubmit}\n        >\n          <div className=\"form-info\">\n            <label className=\"form-label\" htmlFor=\"email\">\n              Email\n            </label>\n            <input\n              className=\"form-input\"\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"Enter your email address\"\n            />\n            <label className=\"form-label\" htmlFor=\"password\">\n              Password\n            </label>\n            <input\n              className=\"form-input\"\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"Enter your password\"\n            />\n            <button className=\"submit-btn\">\n              <span className=\"noselect\">Submit</span>\n            </button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(FormSignin);\n","import React from \"react\";\nimport FormSignin from \"../components/Forms/FormSignin\";\n//import { Redirect } from \"react-router-dom\";\n\nconst Signin = (props) => {\n  return <FormSignin />;\n};\n\nexport default Signin;\n","import React, { Component } from \"react\";\nimport { withRouter, Redirect } from \"react-router-dom\";\nimport { UserContext } from \"../Auth/UserContext\";\nimport apiHandler from \"../../api/apiHandler\";\nimport \"../../styles/form.css\";\n\nclass FormSignup extends Component {\n  static contextType = UserContext;\n\n  state = {\n    firstName: \"\",\n    lastName: \"\",\n    jobTitle: \"\",\n    email: \"\",\n    password: \"\",\n  };\n\n  handleChange = (event) => {\n    const key = event.target.name;\n    const value = event.target.value;\n\n    this.setState({ [key]: value });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    apiHandler\n      .signup(this.state)\n      .then((data) => {\n        this.context.setUser(data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  render() {\n    if (this.context.user) {\n      return <Redirect to=\"/\" />;\n    }\n\n    return (\n      <div className=\"form\">\n        <h2 className=\"form-message\">Create your account</h2>\n\n        <form className=\"account-form\" onSubmit={this.handleSubmit}>\n          <div className=\"form-info\">\n            <label className=\"form-label\" htmlFor=\"firstName\">\n              First Name\n            </label>\n            <input\n              className=\"form-input\"\n              onChange={this.handleChange}\n              value={this.state.firstName}\n              type=\"text\"\n              name=\"firstName\"\n              placeholder=\"Enter your first name\"\n            />\n            <label className=\"form-label\" htmlFor=\"lastName\">\n              Last Name\n            </label>\n            <input\n              className=\"form-input\"\n              onChange={this.handleChange}\n              value={this.state.lastName}\n              type=\"text\"\n              name=\"lastName\"\n              placeholder=\"Enter your last name\"\n            />\n            <label className=\"form-label\" htmlFor=\"jobTitle\">\n              Job Title\n            </label>\n            <input\n              className=\"form-input\"\n              onChange={this.handleChange}\n              value={this.state.jobTitle}\n              type=\"text\"\n              name=\"jobTitle\"\n              placeholder=\"Enter your job title\"\n            />\n            <label className=\"form-label\" htmlFor=\"email\">\n              Email\n            </label>\n            <input\n              className=\"form-input\"\n              onChange={this.handleChange}\n              value={this.state.email}\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"Enter your email\"\n            />\n            <label className=\"form-label\" htmlFor=\"password\">\n              Password\n            </label>\n            <input\n              className=\"form-input\"\n              onChange={this.handleChange}\n              value={this.state.password}\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"Enter your password\"\n            />\n            <button className=\"submit-btn\">\n              <span className=\"noselect\">Submit</span>\n            </button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(FormSignup);\n","import React from \"react\";\nimport FormSignup from \"../components/Forms/FormSignup\";\n//import { Redirect } from \"react-router-dom\";\n\nconst Signup = (props) => {\n  return <FormSignup />;\n};\n\nexport default Signup;\n","import React from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\nimport { withUser } from \"../components/Auth/withUser\";\n\nconst ProtectedRoute = ({ component: Component, context, ...rest }) => {\n  if (context.isLoading) {\n    return null;\n  } else if (context.isLoggedIn) {\n    return <Route {...rest} render={(props) => <Component {...props} />} />;\n  } else {\n    return <Redirect to=\"/signin\" />;\n  }\n};\n\nexport default withUser(ProtectedRoute);\n","import React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport apiHandler from \"../api/apiHandler\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst dayjs = require(\"dayjs\");\nrequire(\"dayjs/locale/en\");\n//var advancedFormat = require(\"dayjs/plugin/advancedFormat\");\n//var LocalizedFormat = require(\"dayjs/plugin/localizedFormat\");\n//var utc = require(\"dayjs/plugin/utc\");\n//var timezone = require(\"dayjs/plugin/timezone\");\n//dayjs.extend(utc);\n//dayjs.extend(timezone);\n//dayjs.extend(advancedFormat);\n//dayjs.extend(LocalizedFormat);\n//var relativeTime = require(\"dayjs/plugin/relativeTime\");\n//dayjs.extend(relativeTime);\n\nexport class DocumentDisplay extends Component {\n  state = {\n    selectedDocument: null,\n    documents: [],\n    patients: [],\n  };\n\n  formRef = React.createRef();\n\n  //launched automatically lors du premier page load AFTER the first render\n  componentDidMount() {\n    apiHandler // axios===promise\n      .getPatientDocuments(this.props.match.params.id)\n      .then((documents) => {\n        this.setState({ documents });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n    apiHandler\n      .getPatientProfile(this.props.match.params.id)\n      .then((patients) => {\n        this.setState({ patients });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  handleDelete(documentId) {\n    apiHandler\n      .removeDocument(documentId)\n      .then((responseFromApi) => {\n        this.setState({\n          documents: this.state.documents.filter(\n            (document) => document._id !== documentId\n          ),\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  render() {\n    return (\n      <div className=\"table-page-wrapper\">\n        <div className=\"doc-display-table\">\n          <h2 className=\"table-header\">\n            {`Patient Profile: ${this.state.patients.firstName} ${this.state.patients.lastName}`}\n          </h2>\n          <table ref={this.formRef}>\n            <thead>\n              <tr>\n                <th className=\"doc-display-date\">Date</th>\n                <th className=\"doc-display-doc-type\">Document Type</th>\n                <th className=\"doc-display-upload-by\">Uploaded By</th>\n                <th className=\"doc-display-doc-notes\">Notes</th>\n                <th className=\"doc-display-doc\">File</th>\n                <th className=\"doc-display-doc-edit\">Edit</th>\n                <th className=\"doc-display-doc-delete\">Delete</th>\n              </tr>\n            </thead>\n            <tbody>\n              {this.state.documents &&\n                this.state.documents.map((document) => {\n                  return (\n                    <tr key={document._id}>\n                      <td>{dayjs(`${document.date}`).format(\"DD-MM-YYYY\")}</td>\n                      <td>{document.docType}</td>\n                      <td>{document.uploadedBy}</td>\n                      <td>{document.notes}</td>\n                      <td>\n                        <a\n                          className=\"display-doc-btns\"\n                          href={document.document}\n                        >\n                          <FontAwesomeIcon icon=\"file-upload\" />\n                        </a>\n                      </td>\n                      <td>\n                        <Link to={`/UpdateDocument/${document._id}`}>\n                          <button className=\"display-doc-btns\">\n                            <FontAwesomeIcon icon=\"edit\" />\n                          </button>\n                        </Link>\n                      </td>\n                      <td>\n                        <button\n                          className=\"display-doc-btns\"\n                          onClick={() => {\n                            this.handleDelete(document._id);\n                          }}\n                        >\n                          <FontAwesomeIcon icon=\"trash\" />\n                        </button>\n                      </td>\n                    </tr>\n                  );\n                })}\n            </tbody>\n          </table>\n          <Link to={`/CreateDocument/${this.props.match.params.id}`}>\n            <button className=\"doc-add-file-btn\">Add File</button>\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(DocumentDisplay);\n","import React, { Component } from \"react\";\nimport \"../styles/profile.css\";\nimport apiHandler from \"../api/apiHandler\";\nimport UserContext from \"../components/Auth/UserContext\";\nimport DocumentDisplay from \"../components/DocumentDisplay\";\nimport { withRouter } from \"react-router\";\n\nexport class Profile extends Component {\n  static contextType = UserContext;\n  state = {\n    documents: [],\n    patients: [],\n  };\n\n  componentDidMount() {\n    apiHandler.getDocuments().then((data) => {\n      this.setState({ documents: data });\n    });\n    apiHandler.getPatients().then((data) => {\n      this.setState({ patients: data });\n    });\n  }\n\n  handleDocumentUpdate = (updatedDocument) => {\n    const documents = [...this.state.documents].map((document) =>\n      document._id === updatedDocument._id ? updatedDocument : document\n    );\n    this.setState({ documents });\n  };\n\n  handleClose = () => {\n    this.setState({ selectedDocument: null });\n  };\n\n  render() {\n    //console.log(this.state.patients);\n    return (\n      <DocumentDisplay\n        patients={this.state.patients}\n        documents={this.state.documents}\n        handleClose={this.handleClose}\n        onDocumentUpdate={this.handleDocumentUpdate}\n      />\n    );\n  }\n}\n\nexport default withRouter(Profile);\n","export function buildFormData(formData, data, parentKey) {\n  if (\n    data &&\n    typeof data === \"object\" &&\n    !(data instanceof Date) &&\n    !(data instanceof File)\n  ) {\n    Object.keys(data).forEach((key) => {\n      buildFormData(\n        formData,\n        data[key],\n        parentKey ? `${parentKey}[${key}]` : key\n      );\n    });\n  } else {\n    const value = data == null ? \"\" : data;\n    formData.append(parentKey, value);\n  }\n}\n","import React, { Component } from \"react\";\nimport UserContext from \"../Auth/UserContext\";\nimport apiHandler from \"../../api/apiHandler\";\nimport { buildFormData } from \"../../tools.js\";\nimport { withUser } from \"../Auth/withUser\";\nimport { withRouter } from \"react-router-dom\";\nimport \"../../styles/form.css\";\n\nclass FormCreateDocument extends Component {\n  static contextType = UserContext;\n\n  state = {\n    docType: \"\",\n    date: \"\",\n    uploadedBy: \"\",\n    document: \"\",\n    notes: \"\",\n  };\n\n  formRef = React.createRef();\n\n  handleChange = (event) => {\n    const key = event.target.name;\n    const value =\n      event.target.type === \"file\" ? event.target.files[0] : event.target.value;\n    this.setState({ [key]: value });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const fd = new FormData();\n    const { httpResponse, ...data } = this.state;\n    data.patient = this.props.match.params.id;\n    // data.document = this.imageRef.current.files[0]\n    buildFormData(fd, data); // You can find this function in ./src/utils.js\n    //// Function implemented by user Raj Pawam Gumdal @stackoverflow : ) => https://stackoverflow.com/a/42241875/13374041\n    apiHandler\n      .createDocument(fd)\n      .then(() => {\n        this.props.history.push(\"/profile/\" + this.props.match.params.id);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  handleFileSelect = ({ tmpUrl, file }) => {\n    this.setState({ image: file });\n  };\n\n  render() {\n    //if (this.context.user) {\n    //  return <Redirect to=\"/\" />;\n    //}\n    return (\n      <div className=\"form\">\n        <h2 className=\"form-message\">Add patient information</h2>\n\n        <form className=\"account-form\" onSubmit={this.handleSubmit}>\n          <div className=\"form-info\">\n            <label className=\"form-label\" htmlFor=\"docType\">\n              Document Type\n            </label>\n\n            <select\n              className=\"form-input\"\n              onChange={this.handleChange}\n              value={this.state.docType}\n              name=\"docType\"\n            >\n              <option value=\"Select\">- Please Select an Option Below -</option>\n              <option value=\"Prescription\">Prescription</option>\n              <option value=\"Test Results\">Test Results</option>\n              <option value=\"X-ray/MRI/CT Scan\">X-ray/MRI/CT Scan</option>\n              <option value=\"Daily Journal\">Daily Journal</option>\n              <option value=\"Admistrative Reocrds\">\n                Administrative Records\n              </option>\n              <option value=\"Patient Information\">Patient Information</option>\n              <option value=\"Other\">\n                Other - Give details in notes section\n              </option>\n            </select>\n\n            <label className=\"form-label\" htmlFor=\"date\">\n              Date\n            </label>\n\n            <input\n              className=\"form-input\"\n              onChange={this.handleChange}\n              value={this.state.date}\n              type=\"date\"\n              name=\"date\"\n            />\n\n            <label className=\"form-label\" htmlFor=\"uploadedBy\">\n              Uploaded By\n            </label>\n\n            <input\n              className=\"form-input\"\n              onChange={this.handleChange}\n              value={this.state.uploadedBy}\n              type=\"text\"\n              name=\"uploadedBy\"\n            />\n\n            <label className=\"form-label\" htmlFor=\"document\">\n              Upload Document\n            </label>\n\n            <input\n              className=\"form-input\"\n              onChange={this.handleChange}\n              defaultValue={this.state.document.document}\n              ref={this.formRef}\n              type=\"file\"\n              name=\"document\"\n            />\n\n            <label className=\"form-label\" htmlFor=\"notes\">\n              Notes\n            </label>\n\n            <textarea\n              className=\"form-input\"\n              onChange={this.handleChange}\n              value={this.state.notes}\n              name=\"notes\"\n              spellCheck=\"true\"\n            ></textarea>\n\n            <button className=\"submit-btn\">Submit</button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default withUser(withRouter(FormCreateDocument));\n","import React, { Component } from \"react\";\nimport FormCreateDocument from \"../components/Forms/FormCreateDocument\";\n\nexport class CreateDocument extends Component {\n  state = {\n    documents: this.props.documents,\n  };\n\n  render() {\n    return (\n      <div>\n        <FormCreateDocument documents={this.props.documents} />\n      </div>\n    );\n  }\n}\n\nexport default CreateDocument;\n","import React, { Component } from \"react\";\nimport UserContext from \"../Auth/UserContext\";\nimport apiHandler from \"../../api/apiHandler\";\nimport { buildFormData } from \"../../tools.js\";\nimport { withRouter } from \"react-router\";\nimport \"../../styles/form.css\";\n\nclass FormUpdateDocument extends Component {\n  static contextType = UserContext;\n  state = {\n    documents: this.props.documents,\n    httpResponse: null,\n  };\n\n  formRef = React.createRef();\n\n  handleChange = (event) => {\n    const value =\n      event.target.type === \"file\" ? event.target.files[0] : event.target.value;\n    const key = event.target.name;\n    this.setState({ [key]: value });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const fd = new FormData();\n    const { httpResponse, ...data } = this.state;\n    buildFormData(fd, data); // You can find this function in ./src/utils.js\n    //// Function implemented by user Raj Pawam Gumdal @stackoverflow : ) => https://stackoverflow.com/a/42241875/13374041\n    apiHandler\n      .updateDocument(this.props.match.params.id, fd)\n      .then((data) => {\n        console.log(\"data\", data);\n        this.props.history.push(\"/profile/\" + data.patient);\n        //clear form\n        //this.props.onDocumentUpdate(data);\n        this.setState({\n          documents: data,\n        });\n        //  httpResponse: {\n        //    status: \"success\",\n        //    message: \"Item successfully updated.\",\n        //  },\n        this.timeoutId = setTimeout(() => {\n          this.setState({ httpResponse: null });\n        }, 1000);\n      })\n      .catch((error) => {\n        this.setState({\n          httpResponse: {\n            status: \"failure\",\n            message: \"An error occured, try again later.\",\n          },\n        });\n        this.timeoutId = setTimeout(() => {\n          this.setState({ httpResponse: null });\n        }, 1000);\n      });\n  };\n\n  handleFileSelect = ({ tmpUrl, file }) => {\n    this.setState({ image: file });\n  };\n\n  componentDidMount() {\n    //launched automatically lors du premier page load AFTER the first render\n    const documentId = this.props.match.params.id;\n    apiHandler // axios===promise\n      .getOneDocument(documentId)\n      .then((document) => this.setState({ documents: document })) //because my state is documents, I need to tell it to equal document (what I recuper from my DB)\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  render() {\n    return (\n      this.state.documents && (\n        <div className=\"form\">\n          <h2 className=\"form-message\">Edit Item</h2>\n\n          <form\n            className=\"account-form\"\n            ref={this.formRef}\n            onSubmit={this.handleSubmit}\n          >\n            <div className=\"form-info\">\n              <label className=\"form-label\" htmlFor=\"docType\">\n                Document Type\n              </label>\n              <select\n                className=\"form-input\"\n                onChange={this.handleChange}\n                defaultValue={this.state.docType}\n                name=\"docType\"\n              >\n                <option value=\"Select\">\n                  - Please Select an Option Below -\n                </option>\n                <option value=\"Prescription\">Prescription</option>\n                <option value=\"Test Results\">Test Results</option>\n                <option value=\"X-ray/MRI/CT Scan\">X-ray/MRI/CT Scan</option>\n                <option value=\"Daily Journal\">Daily Journal</option>\n                <option value=\"Admistrative Reocrds\">\n                  Administrative Records\n                </option>\n                <option value=\"Patient Information\">Patient Information</option>\n                <option value=\"Other\">\n                  Other - Give details in notes section\n                </option>\n              </select>\n\n              <label className=\"form-label\" htmlFor=\"date\">\n                Date\n              </label>\n              <input\n                className=\"form-input\"\n                onChange={this.handleChange}\n                type=\"date\"\n                name=\"date\"\n                defaultValue={this.state.documents.date}\n              />\n\n              <label className=\"form-label\" htmlFor=\"uploadedBy\">\n                Uploaded By\n              </label>\n              <input\n                className=\"form-input\"\n                onChange={this.handleChange}\n                type=\"text\"\n                name=\"uploadedBy\"\n                defaultValue={this.state.documents.uploadedBy}\n              />\n\n              <label className=\"form-label\" htmlFor=\"document\">\n                Document\n              </label>\n              <input\n                className=\"form-input\"\n                onChange={this.handleChange}\n                type=\"file\"\n                name=\"document\"\n                defaultValue={this.state.documents.document}\n              />\n\n              <label className=\"form-label\" htmlFor=\"notes\">\n                Notes\n              </label>\n              <textarea\n                className=\"form-input\"\n                onChange={this.handleChange}\n                name=\"notes\"\n                defaultValue={this.state.documents.notes}\n              ></textarea>\n              <button className=\"submit-btn\">Edit Item</button>\n            </div>\n          </form>\n        </div>\n      )\n    );\n  }\n}\n\nexport default withRouter(FormUpdateDocument);\n","import React, { Component } from \"react\";\nimport FormUpdateDocument from \"../components/Forms/FormUpdateDocument\";\nimport apiHandler from \"../api/apiHandler\";\n\nexport class UpdateDocument extends Component {\n  state = {\n    documents: [],\n  };\n\n  componentDidMount() {\n    apiHandler.getDocuments().then((data) => {\n      this.setState({ documents: data });\n    });\n  }\n\n  render() {\n    return <FormUpdateDocument documents={this.state.documents} />;\n  }\n}\n\nexport default UpdateDocument;\n","import React, { Component } from \"react\";\nimport apiHandler from \"../api/apiHandler\";\nimport { withUser } from \"./Auth/withUser\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport \"../styles/table.css\";\n\nclass PatientDisplay extends Component {\n  state = {\n    selectedPatient: null,\n    patients: [],\n  };\n\n  //launched automatically lors du premier page load AFTER the first render\n  componentDidMount() {\n    apiHandler // axios===promise\n      .getPatients(this.props.patients)\n      .then((patients) => this.setState({ patients })) //because my state is documents, I need to tell it to equal document (what I recuper from my DB)\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  handleClick(patientId) {\n    apiHandler\n      .addNewPatient(patientId)\n      .then((user) => {\n        console.log(user);\n        this.props.context.setUser(user.data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  displayAddButton(patientId) {\n    if (this.props.context.user.patients.includes(patientId))\n      return <div className=\"already-added-msg\">Already added</div>;\n    else {\n      return (\n        <button\n          className=\"table-btns\"\n          onClick={() => this.handleClick(patientId)}\n        >\n          <FontAwesomeIcon icon=\"plus\" />\n        </button>\n      );\n    }\n  }\n\n  displayRemoveButton(patientId) {\n    if (this.props.context.user.patients.includes(patientId))\n      return (\n        <button onClick={() => this.handleDelete(patientId)}>Remove</button>\n      );\n  }\n\n  //deleteItem = (itemId) => {\n  //  apiHandler.removeDocument(itemId).then(() => {\n  //    const userItems = [...this.state.userItems].filter(\n  //      (item) => item._id !== itemId);\n  //    this.setState({ userItems });\n  //  });\n  //};\n\n  render() {\n    return (\n      <div className=\"table-page-wrapper\">\n        <div className=\"table\">\n          <h1 className=\"table-header\">Patients</h1>\n          <table>\n            <thead>\n              <tr>\n                <th>Patient Name</th>\n                <th>Date of Birth (DD/MM/YYY)</th>\n                <th>Social Security Number</th>\n                <th className=\"patients-header-profile\">Add Patient</th>\n              </tr>\n            </thead>\n            <tbody>\n              {this.props.patients[0] &&\n                this.props.patients.map((patient) => {\n                  return (\n                    <tr key={patient._id}>\n                      <td>{`${patient.firstName} ${patient.lastName}`}</td>\n                      <td>{patient.birthDate}</td>\n                      <td>{patient.socialSecurityNumber}</td>\n                      <td>{this.displayAddButton(patient._id)}</td>\n                    </tr>\n                  );\n                })}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withUser(PatientDisplay);\n\n//<td>{this.displayRemoveButton(patient._id)}</td>\n","import React, { Component } from \"react\";\nimport apiHandler from \"../api/apiHandler\";\nimport PatientDisplay from \"../components/PatientDisplay\";\nimport { withRouter } from \"react-router\";\nimport UserContext from \"../components/Auth/UserContext\";\n\nexport class PatientList extends Component {\n  static contextType = UserContext;\n  state = {\n    patients: [],\n  };\n\n  componentDidMount() {\n    apiHandler.getPatients().then((data) => {\n      this.setState({ patients: data });\n    });\n  }\n\n  handleClose = () => {\n    this.setState({ selectedPatient: null });\n  };\n\n  render() {\n    return (\n      <PatientDisplay\n        patients={this.state.patients}\n        handleClose={this.handleClose}\n      />\n    );\n  }\n}\n\nexport default withRouter(PatientList);\n","import React, { Component } from \"react\";\nimport apiHandler from \"../api/apiHandler\";\n//import { withUser } from \"../components/Auth/withUser\"; //import my current user info as props\nimport { withRouter } from \"react-router-dom\";\nimport \"../styles/table.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\n//const dayjs = require(\"dayjs\");\n//require(\"dayjs/locale/en\");\n//var advancedFormat = require(\"dayjs/plugin/advancedFormat\");\n//var LocalizedFormat = require(\"dayjs/plugin/localizedFormat\");\n//var utc = require(\"dayjs/plugin/utc\");\n//var timezone = require(\"dayjs/plugin/timezone\");\n//dayjs.extend(utc);\n//dayjs.extend(timezone);\n//dayjs.extend(advancedFormat);\n//dayjs.extend(LocalizedFormat);\n//var relativeTime = require(\"dayjs/plugin/relativeTime\");\n//dayjs.extend(relativeTime);\n\nclass MyPatients extends Component {\n  state = {\n    patients: [],\n  };\n\n  //after first render, this function pulls info from DB into page and sets the state\n  componentDidMount() {\n    apiHandler\n      .getMyPatients()\n      .then((user) => this.setState({ patients: user.patients }))\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  handlePatient(patientId) {\n    apiHandler\n      .getPatientProfile(patientId)\n      .then((data) => this.props.history.push(\"/profile/\" + patientId))\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  render() {\n    return (\n      <div>\n        {this.state.patients.length === 0 ? (\n          <h1 className=\"table-header-my-patients\">\n            You do not have any patients\n          </h1>\n        ) : (\n          <h1 className=\"table-header-my-patients\"> My Patients</h1>\n        )}\n        <div className=\"table-page-wrapper\">\n          <div className=\"table\">\n            <table>\n              <thead>\n                <tr>\n                  <th className=\"patients-header-name\">Patient Name</th>\n                  <th className=\"patients-header-birthdate\">\n                    Date of Birth (DD/MM/YYY)\n                  </th>\n                  <th className=\"patients-header-ssnum\">\n                    Social Security Number\n                  </th>\n                  <th className=\"patients-header-profile\">Patient Profile</th>\n                </tr>\n              </thead>\n              <tbody>\n                {this.state.patients.map((patient) => {\n                  return (\n                    <tr key={patient._id}>\n                      <td>{`${patient.firstName} ${patient.lastName}`}</td>\n                      <td>{patient.birthDate}</td>\n                      <td>{patient.socialSecurityNumber}</td>\n                      <td>\n                        <button\n                          className=\"table-btns\"\n                          onClick={() => {\n                            this.handlePatient(patient._id);\n                          }}\n                        >\n                          <FontAwesomeIcon icon=\"arrow-circle-right\" />\n                        </button>\n                      </td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(MyPatients);\n\n//BE - populate field of patients instead of just having Id's\n//button go to patient profile - need id of patient\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\n\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\n//import { faReact } from \"@fortawesome/free-brands-svg-icons\";\nimport {\n  faEdit,\n  faTrash,\n  faFileUpload,\n  faCoffee,\n  faArrowCircleRight,\n  faPlus,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nimport NavMain from \"./components/NavMain\";\nimport Home from \"./pages/Home\";\nimport Signin from \"./pages/Signin\";\nimport Signup from \"./pages/Signup\";\nimport ProtectedRoute from \"./components/ProtectedRoute\";\nimport Profile from \"./pages/Profile\";\nimport CreateDocument from \"./pages/CreateDocument\";\nimport UpdateDocument from \"./pages/UpdateDocument\";\nimport PatientList from \"./pages/PatientList\";\nimport MyPatients from \"./pages/MyPatients\";\n\nlibrary.add(\n  faEdit,\n  faTrash,\n  faFileUpload,\n  faCoffee,\n  faArrowCircleRight,\n  faPlus\n);\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <NavMain />\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/signin\" component={Signin} />\n        <Route exact path=\"/signup\" component={Signup} />\n        <ProtectedRoute\n          exact\n          path=\"/CreateDocument/:id\"\n          component={CreateDocument}\n        />\n        <ProtectedRoute\n          exact\n          path=\"/UpdateDocument/:id\"\n          component={UpdateDocument}\n        />\n        <ProtectedRoute exact path=\"/PatientList\" component={PatientList} />\n        <ProtectedRoute exact path=\"/MyPatients\" component={MyPatients} />\n        <ProtectedRoute exact path=\"/Profile/:id\" component={Profile} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport UserProvider from \"./components/Auth/UserProvider\";\nimport App from \"./App\";\n\nimport \"./styles/reset.css\";\nimport \"./styles/global.css\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <UserProvider>\n      <App />\n    </UserProvider>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}